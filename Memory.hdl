// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    And16(a[0..14]=address, b=true, out[0..13]=addressmem, out[14]=isdevice);
    DMux(in=load, sel=isdevice, a=loadmem, b=loaddev);
    RAM16K(in=in, load=loadmem, address=addressmem, out=mem);

    And16(a[0..13]=addressmem, b=true, out[0..12]=addressscreen, out[13]=iskeyboard);
    DMux(in=loaddev, sel=iskeyboard, a=loadscreen, b=loadkeyboard);
    Screen(in=in, load=loadscreen, address=addressscreen, out=scr);

    And16(a[0..12]=addressscreen, b=true, out[0..7]=kblower, out[8..12]=kbhigher);
    Or8Way(in=kblower, out=anylower);
    Or8Way(in[0..4]=kbhigher, in[5..7]=false, out=anyhigher);
    Or(a=anylower, b=anyhigher, out=isinvalidaddress);
    Keyboard(out=kbsource);

    Mux16(a=kbsource, b=false, sel=isinvalidaddress, out=kb);
    Mux16(a=scr, b=kb, sel=iskeyboard, out=device);
    Mux16(a=mem, b=device, sel=isdevice, out=out);
}
